import { Button, VerticalBox, GridBox, Button, Slider, LineEdit } from "std-widgets.slint";
export component AppWindow inherits Window {

   in property <string> results: "";
   in-out property <bool> opencurtain;
    // when we click a button we want to display the calculated income in the bottom
    callback divide-income(string);

background: #313e50;
    GridBox {
        padding: 50px;
        spacing: 25px;
        // Row one
        Row {
            Text {
                text: "Enter Total Income";
                horizontal-alignment: center;
                font-size: 24px;
                color: whitesmoke;
            }
        }
        // Row two
        Row {
            income := LineEdit {
                font-size: 14px;
                horizontal-alignment: center;
                placeholder-text: "Enter A Number";
                height: 35px;
            }
        }
        // Row three
        Row {
            Button {
                text: "Calculate";
                primary: true;
                height: 35px;
                clicked => {
                    root.opencurtain = !root.opencurtain;
                    divide-income(income.text)
                }
            }
        }

        Row {
            VerticalBox {
                Rectangle {
                    height: 100px;
                    background: #f2f2f2;
                }
                    Text {
                        color: black;
                        font-size: 16px;
                        font-weight: 500;
                        text: root.results;
                    }
            }
        }
        // Left Rectangle
                    Rectangle {
                        background: #333333;
                        x: 0;
                        width: opencurtain ? 0px : parent.width / 2;
                        height: parent.height;
                        animate width {
                             duration: 250ms; easing: ease-in;
                        }
                    }
        // Right Rectangle
    }               Rectangle {
                        background: #333333;
                        x: opencurtain ? parent.width : parent.width / 2;
                        width: opencurtain ? 0px : parent.width / 2;
                        height: parent.height;
                        animate width {
                             duration: 250ms; easing: ease-in;
                        }
                        animate x {
                            duration: 250ms; easing: ease-in;
                       }
                    }
}


// Travis Media
// https://www.youtube.com/watch?v=7aFgeUG9TK4

// Think about abtracting the rectangle out of the Row